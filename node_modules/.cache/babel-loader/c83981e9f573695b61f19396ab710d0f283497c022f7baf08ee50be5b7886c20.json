{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport { ref, computed, onMounted } from 'vue';\nimport { getDatabase, ref as dbRef, onValue, push, update, remove } from 'firebase/database';\nimport { getStorage, ref as storageRef, uploadBytesResumable, getDownloadURL, deleteObject } from 'firebase/storage';\nexport default {\n  name: 'Literature',\n  setup() {\n    const db = getDatabase();\n    const storage = getStorage();\n\n    // Papers data\n    const papers = ref([]);\n    const selectedPaper = ref(null);\n    const newQuote = ref('');\n\n    // Filters\n    const searchQuery = ref('');\n    const filterYear = ref('');\n    const filterMethodology = ref('');\n\n    // New paper modal\n    const showAddPaperModal = ref(false);\n    const newPaper = ref({\n      title: '',\n      summary: '',\n      year: '',\n      methodology: 'تجريبية',\n      notes: '',\n      quotes: []\n    });\n    const selectedFile = ref(null);\n    const isUploading = ref(false);\n\n    // Load papers from Firebase\n    const loadPapers = () => {\n      const papersRef = dbRef(db, 'papers');\n      onValue(papersRef, snapshot => {\n        const data = snapshot.val();\n        if (data) {\n          papers.value = Object.entries(data).map(([id, paper]) => ({\n            id,\n            ...paper,\n            quotes: paper.quotes || [],\n            notes: paper.notes || ''\n          }));\n        } else {\n          papers.value = [];\n        }\n      });\n    };\n\n    // Computed properties\n    const availableYears = computed(() => {\n      const years = [...new Set(papers.value.map(paper => paper.year))];\n      return years.sort((a, b) => b - a); // Sort descending\n    });\n    const filteredPapers = computed(() => {\n      return papers.value.filter(paper => {\n        // Filter by search query\n        if (searchQuery.value && !paper.title.toLowerCase().includes(searchQuery.value.toLowerCase()) && !paper.summary.toLowerCase().includes(searchQuery.value.toLowerCase())) {\n          return false;\n        }\n\n        // Filter by year\n        if (filterYear.value && paper.year !== filterYear.value) {\n          return false;\n        }\n\n        // Filter by methodology\n        if (filterMethodology.value && paper.methodology !== filterMethodology.value) {\n          return false;\n        }\n        return true;\n      });\n    });\n\n    // Paper details\n    const openPaperDetails = paper => {\n      selectedPaper.value = {\n        ...paper\n      };\n    };\n    const closeDetails = () => {\n      selectedPaper.value = null;\n      newQuote.value = '';\n    };\n    const savePaperChanges = () => {\n      if (!selectedPaper.value) return;\n      const paperRef = dbRef(db, `papers/${selectedPaper.value.id}`);\n      update(paperRef, {\n        title: selectedPaper.value.title,\n        summary: selectedPaper.value.summary,\n        year: selectedPaper.value.year,\n        methodology: selectedPaper.value.methodology,\n        quotes: selectedPaper.value.quotes || [],\n        notes: selectedPaper.value.notes || ''\n      });\n      closeDetails();\n    };\n    const deletePaper = () => {\n      if (!selectedPaper.value) return;\n      if (confirm('هل أنت متأكد من حذف هذه الورقة العلمية؟')) {\n        // Delete file from storage\n        if (selectedPaper.value.storagePath) {\n          const fileRef = storageRef(storage, selectedPaper.value.storagePath);\n          deleteObject(fileRef).catch(error => {\n            console.error('Error deleting file:', error);\n          });\n        }\n\n        // Delete data from database\n        const paperRef = dbRef(db, `papers/${selectedPaper.value.id}`);\n        remove(paperRef);\n        closeDetails();\n      }\n    };\n\n    // Quote management\n    const addQuote = () => {\n      if (!newQuote.value.trim() || !selectedPaper.value) return;\n      if (!selectedPaper.value.quotes) {\n        selectedPaper.value.quotes = [];\n      }\n      selectedPaper.value.quotes.push(newQuote.value.trim());\n      newQuote.value = '';\n    };\n    const removeQuote = index => {\n      if (!selectedPaper.value || !selectedPaper.value.quotes) return;\n      selectedPaper.value.quotes.splice(index, 1);\n    };\n\n    // File upload\n    const handleFileUpload = event => {\n      selectedFile.value = event.target.files[0];\n    };\n\n    // Add new paper\n    const addNewPaper = () => {\n      if (!newPaper.value.title.trim() || !newPaper.value.summary.trim() || !newPaper.value.year.trim() || !selectedFile.value) {\n        alert('يرجى ملء جميع الحقول المطلوبة');\n        return;\n      }\n      isUploading.value = true;\n\n      // Create a unique filename\n      const ext = selectedFile.value.name.split('.').pop();\n      const fileName = `${newPaper.value.title.trim().replace(/\\s+/g, '_')}_${Date.now()}.${ext}`;\n      const storagePath = `papers/${fileName}`;\n\n      // Upload file to Firebase Storage\n      const fileRef = storageRef(storage, storagePath);\n      const uploadTask = uploadBytesResumable(fileRef, selectedFile.value);\n      uploadTask.on('state_changed', snapshot => {\n        // Progress monitoring if needed\n        const progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n        console.log('Upload is ' + progress + '% done');\n      }, error => {\n        // Error handling\n        console.error('Error uploading file:', error);\n        isUploading.value = false;\n        alert('حدث خطأ أثناء رفع الملف');\n      }, () => {\n        // Upload completed successfully\n        getDownloadURL(uploadTask.snapshot.ref).then(downloadURL => {\n          // Save paper data to Firebase Database\n          const papersRef = dbRef(db, 'papers');\n          push(papersRef, {\n            title: newPaper.value.title,\n            summary: newPaper.value.summary,\n            year: newPaper.value.year,\n            methodology: newPaper.value.methodology,\n            fileName: fileName,\n            url: downloadURL,\n            storagePath: storagePath,\n            timestamp: Date.now(),\n            quotes: [],\n            notes: ''\n          });\n\n          // Reset form\n          newPaper.value = {\n            title: '',\n            summary: '',\n            year: '',\n            methodology: 'تجريبية',\n            notes: '',\n            quotes: []\n          };\n          selectedFile.value = null;\n          isUploading.value = false;\n          showAddPaperModal.value = false;\n        });\n      });\n    };\n\n    // Helper functions\n    const truncateText = (text, maxLength) => {\n      if (!text) return '';\n      return text.length > maxLength ? text.substring(0, maxLength) + '...' : text;\n    };\n    const formatDate = timestamp => {\n      if (!timestamp) return '';\n      const date = new Date(timestamp);\n      return date.toLocaleDateString('ar-EG');\n    };\n\n    // Initialize\n    onMounted(() => {\n      loadPapers();\n    });\n    return {\n      papers,\n      selectedPaper,\n      newQuote,\n      searchQuery,\n      filterYear,\n      filterMethodology,\n      availableYears,\n      filteredPapers,\n      showAddPaperModal,\n      newPaper,\n      isUploading,\n      openPaperDetails,\n      closeDetails,\n      savePaperChanges,\n      deletePaper,\n      addQuote,\n      removeQuote,\n      handleFileUpload,\n      addNewPaper,\n      truncateText,\n      formatDate\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","getDatabase","dbRef","onValue","push","update","remove","getStorage","storageRef","uploadBytesResumable","getDownloadURL","deleteObject","name","setup","db","storage","papers","selectedPaper","newQuote","searchQuery","filterYear","filterMethodology","showAddPaperModal","newPaper","title","summary","year","methodology","notes","quotes","selectedFile","isUploading","loadPapers","papersRef","snapshot","data","val","value","Object","entries","map","id","paper","availableYears","years","Set","sort","a","b","filteredPapers","filter","toLowerCase","includes","openPaperDetails","closeDetails","savePaperChanges","paperRef","deletePaper","confirm","storagePath","fileRef","catch","error","console","addQuote","trim","removeQuote","index","splice","handleFileUpload","event","target","files","addNewPaper","alert","ext","split","pop","fileName","replace","Date","now","uploadTask","on","progress","bytesTransferred","totalBytes","log","then","downloadURL","url","timestamp","truncateText","text","maxLength","length","substring","formatDate","date","toLocaleDateString"],"sources":["C:\\Users\\فاطمة الزهراني\\Downloads\\research-task-manager-updated\\task-manager\\src\\views\\Literature.vue"],"sourcesContent":["<template>\n  <div class=\"fade-in\">\n    <div class=\"flex justify-between items-center mb-6\">\n      <h1 class=\"text-2xl font-bold text-gray-800\">مراجعة الأدبيات</h1>\n      <button @click=\"showAddPaperModal = true\" class=\"btn btn-primary\">\n        <i class=\"fas fa-plus ml-2\"></i>إضافة ورقة علمية\n      </button>\n    </div>\n    \n    <div class=\"bg-white rounded-lg shadow-md p-4 mb-6\">\n      <div class=\"flex flex-wrap gap-4\">\n        <div class=\"relative\">\n          <input \n            type=\"text\" \n            v-model=\"searchQuery\" \n            placeholder=\"بحث في الأوراق العلمية...\" \n            class=\"form-input py-2 pl-10 pr-4\"\n          >\n          <i class=\"fas fa-search absolute right-3 top-3 text-gray-400\"></i>\n        </div>\n        \n        <select v-model=\"filterYear\" class=\"form-input py-2\">\n          <option value=\"\">كل السنوات</option>\n          <option v-for=\"year in availableYears\" :key=\"year\" :value=\"year\">{{ year }}</option>\n        </select>\n        \n        <select v-model=\"filterMethodology\" class=\"form-input py-2\">\n          <option value=\"\">كل المنهجيات</option>\n          <option value=\"تجريبية\">تجريبية</option>\n          <option value=\"تحليلية\">تحليلية</option>\n          <option value=\"وصفية\">وصفية</option>\n          <option value=\"مقارنة\">مقارنة</option>\n          <option value=\"تطبيقية\">تطبيقية</option>\n        </select>\n      </div>\n    </div>\n    \n    <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n      <div v-for=\"paper in filteredPapers\" :key=\"paper.id\" class=\"card hover:shadow-lg transition-shadow duration-200\">\n        <div class=\"flex justify-between items-start\">\n          <h3 class=\"text-lg font-semibold text-gray-800\">{{ paper.title }}</h3>\n          <span class=\"bg-primary-100 text-primary-800 text-xs py-1 px-2 rounded-full\">{{ paper.year }}</span>\n        </div>\n        \n        <p class=\"text-sm text-gray-600 mt-3\">{{ truncateText(paper.summary, 150) }}</p>\n        \n        <div class=\"flex items-center mt-4 text-sm text-gray-500\">\n          <span class=\"ml-4\"><i class=\"fas fa-flask ml-1\"></i>{{ paper.methodology }}</span>\n          <span><i class=\"fas fa-calendar-alt ml-1\"></i>{{ formatDate(paper.timestamp) }}</span>\n        </div>\n        \n        <div class=\"flex justify-between mt-4 pt-4 border-t border-gray-100\">\n          <button @click=\"openPaperDetails(paper)\" class=\"text-primary-600 hover:text-primary-800\">\n            <i class=\"fas fa-info-circle ml-1\"></i>التفاصيل\n          </button>\n          \n          <a :href=\"paper.url\" target=\"_blank\" class=\"text-primary-600 hover:text-primary-800\">\n            <i class=\"fas fa-external-link-alt ml-1\"></i>عرض الورقة\n          </a>\n        </div>\n      </div>\n    </div>\n    \n    <!-- Paper Details Modal -->\n    <div v-if=\"selectedPaper\" class=\"modal-overlay\" @click.self=\"closeDetails\">\n      <div class=\"modal-content\">\n        <div class=\"flex justify-between items-center mb-4\">\n          <h2 class=\"text-xl font-bold text-gray-800\">{{ selectedPaper.title }}</h2>\n          <button @click=\"closeDetails\" class=\"text-gray-500 hover:text-gray-700\">\n            <i class=\"fas fa-times\"></i>\n          </button>\n        </div>\n        \n        <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\n          <div>\n            <label class=\"form-label\">السنة</label>\n            <input type=\"text\" v-model=\"selectedPaper.year\" class=\"form-input\">\n          </div>\n          \n          <div>\n            <label class=\"form-label\">المنهجية</label>\n            <select v-model=\"selectedPaper.methodology\" class=\"form-input\">\n              <option value=\"تجريبية\">تجريبية</option>\n              <option value=\"تحليلية\">تحليلية</option>\n              <option value=\"وصفية\">وصفية</option>\n              <option value=\"مقارنة\">مقارنة</option>\n              <option value=\"تطبيقية\">تطبيقية</option>\n            </select>\n          </div>\n        </div>\n        \n        <div class=\"mb-4\">\n          <label class=\"form-label\">ملخص الورقة</label>\n          <textarea v-model=\"selectedPaper.summary\" rows=\"6\" class=\"form-input\"></textarea>\n        </div>\n        \n        <div class=\"mb-4\">\n          <label class=\"form-label\">الاقتباسات المهمة</label>\n          <div class=\"bg-gray-50 p-3 rounded-lg max-h-40 overflow-y-auto mb-2\">\n            <div v-if=\"!selectedPaper.quotes || selectedPaper.quotes.length === 0\" class=\"text-gray-500 text-sm\">\n              لا توجد اقتباسات بعد\n            </div>\n            <div v-else v-for=\"(quote, index) in selectedPaper.quotes\" :key=\"index\" class=\"mb-3 p-3 bg-white rounded-lg shadow-sm\">\n              <p class=\"text-sm\">{{ quote }}</p>\n              <button @click=\"removeQuote(index)\" class=\"text-red-600 text-xs hover:text-red-800 mt-2\">\n                <i class=\"fas fa-trash-alt ml-1\"></i>حذف\n              </button>\n            </div>\n          </div>\n          \n          <div class=\"flex\">\n            <input \n              type=\"text\" \n              v-model=\"newQuote\" \n              placeholder=\"أضف اقتباسًا...\" \n              class=\"form-input flex-grow\"\n              @keyup.enter=\"addQuote\"\n            >\n            <button @click=\"addQuote\" class=\"btn btn-primary mr-2\">إضافة</button>\n          </div>\n        </div>\n        \n        <div class=\"mb-4\">\n          <label class=\"form-label\">الملاحظات</label>\n          <textarea v-model=\"selectedPaper.notes\" rows=\"4\" class=\"form-input\"></textarea>\n        </div>\n        \n        <div class=\"flex justify-between\">\n          <div>\n            <button @click=\"savePaperChanges\" class=\"btn btn-primary ml-2\">حفظ التغييرات</button>\n            <button @click=\"closeDetails\" class=\"btn btn-outline\">إلغاء</button>\n          </div>\n          <button @click=\"deletePaper\" class=\"btn btn-danger\">حذف الورقة</button>\n        </div>\n      </div>\n    </div>\n    \n    <!-- Add Paper Modal -->\n    <div v-if=\"showAddPaperModal\" class=\"modal-overlay\" @click.self=\"showAddPaperModal = false\">\n      <div class=\"modal-content\">\n        <div class=\"flex justify-between items-center mb-4\">\n          <h2 class=\"text-xl font-bold text-gray-800\">إضافة ورقة علمية جديدة</h2>\n          <button @click=\"showAddPaperModal = false\" class=\"text-gray-500 hover:text-gray-700\">\n            <i class=\"fas fa-times\"></i>\n          </button>\n        </div>\n        \n        <div class=\"mb-4\">\n          <label class=\"form-label\">عنوان الورقة</label>\n          <input type=\"text\" v-model=\"newPaper.title\" class=\"form-input\" required>\n        </div>\n        \n        <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\n          <div>\n            <label class=\"form-label\">السنة</label>\n            <input type=\"text\" v-model=\"newPaper.year\" class=\"form-input\" required>\n          </div>\n          \n          <div>\n            <label class=\"form-label\">المنهجية</label>\n            <select v-model=\"newPaper.methodology\" class=\"form-input\" required>\n              <option value=\"تجريبية\">تجريبية</option>\n              <option value=\"تحليلية\">تحليلية</option>\n              <option value=\"وصفية\">وصفية</option>\n              <option value=\"مقارنة\">مقارنة</option>\n              <option value=\"تطبيقية\">تطبيقية</option>\n            </select>\n          </div>\n        </div>\n        \n        <div class=\"mb-4\">\n          <label class=\"form-label\">ملخص الورقة</label>\n          <textarea v-model=\"newPaper.summary\" rows=\"4\" class=\"form-input\" required></textarea>\n        </div>\n        \n        <div class=\"mb-4\">\n          <label class=\"form-label\">ملف الورقة (PDF)</label>\n          <input type=\"file\" accept=\"application/pdf\" @change=\"handleFileUpload\" class=\"form-input\" required>\n        </div>\n        \n        <div class=\"flex justify-end\">\n          <button @click=\"showAddPaperModal = false\" class=\"btn btn-outline ml-2\">إلغاء</button>\n          <button @click=\"addNewPaper\" class=\"btn btn-primary\" :disabled=\"isUploading\">\n            <i v-if=\"isUploading\" class=\"fas fa-spinner fa-spin ml-1\"></i>\n            إضافة الورقة\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted } from 'vue'\nimport { getDatabase, ref as dbRef, onValue, push, update, remove } from 'firebase/database'\nimport { getStorage, ref as storageRef, uploadBytesResumable, getDownloadURL, deleteObject } from 'firebase/storage'\n\nexport default {\n  name: 'Literature',\n  setup() {\n    const db = getDatabase()\n    const storage = getStorage()\n    \n    // Papers data\n    const papers = ref([])\n    const selectedPaper = ref(null)\n    const newQuote = ref('')\n    \n    // Filters\n    const searchQuery = ref('')\n    const filterYear = ref('')\n    const filterMethodology = ref('')\n    \n    // New paper modal\n    const showAddPaperModal = ref(false)\n    const newPaper = ref({\n      title: '',\n      summary: '',\n      year: '',\n      methodology: 'تجريبية',\n      notes: '',\n      quotes: []\n    })\n    const selectedFile = ref(null)\n    const isUploading = ref(false)\n    \n    // Load papers from Firebase\n    const loadPapers = () => {\n      const papersRef = dbRef(db, 'papers')\n      onValue(papersRef, (snapshot) => {\n        const data = snapshot.val()\n        if (data) {\n          papers.value = Object.entries(data).map(([id, paper]) => ({\n            id,\n            ...paper,\n            quotes: paper.quotes || [],\n            notes: paper.notes || ''\n          }))\n        } else {\n          papers.value = []\n        }\n      })\n    }\n    \n    // Computed properties\n    const availableYears = computed(() => {\n      const years = [...new Set(papers.value.map(paper => paper.year))]\n      return years.sort((a, b) => b - a) // Sort descending\n    })\n    \n    const filteredPapers = computed(() => {\n      return papers.value.filter(paper => {\n        // Filter by search query\n        if (searchQuery.value && !paper.title.toLowerCase().includes(searchQuery.value.toLowerCase()) && \n            !paper.summary.toLowerCase().includes(searchQuery.value.toLowerCase())) {\n          return false\n        }\n        \n        // Filter by year\n        if (filterYear.value && paper.year !== filterYear.value) {\n          return false\n        }\n        \n        // Filter by methodology\n        if (filterMethodology.value && paper.methodology !== filterMethodology.value) {\n          return false\n        }\n        \n        return true\n      })\n    })\n    \n    // Paper details\n    const openPaperDetails = (paper) => {\n      selectedPaper.value = { ...paper }\n    }\n    \n    const closeDetails = () => {\n      selectedPaper.value = null\n      newQuote.value = ''\n    }\n    \n    const savePaperChanges = () => {\n      if (!selectedPaper.value) return\n      \n      const paperRef = dbRef(db, `papers/${selectedPaper.value.id}`)\n      update(paperRef, {\n        title: selectedPaper.value.title,\n        summary: selectedPaper.value.summary,\n        year: selectedPaper.value.year,\n        methodology: selectedPaper.value.methodology,\n        quotes: selectedPaper.value.quotes || [],\n        notes: selectedPaper.value.notes || ''\n      })\n      \n      closeDetails()\n    }\n    \n    const deletePaper = () => {\n      if (!selectedPaper.value) return\n      \n      if (confirm('هل أنت متأكد من حذف هذه الورقة العلمية؟')) {\n        // Delete file from storage\n        if (selectedPaper.value.storagePath) {\n          const fileRef = storageRef(storage, selectedPaper.value.storagePath)\n          deleteObject(fileRef).catch(error => {\n            console.error('Error deleting file:', error)\n          })\n        }\n        \n        // Delete data from database\n        const paperRef = dbRef(db, `papers/${selectedPaper.value.id}`)\n        remove(paperRef)\n        closeDetails()\n      }\n    }\n    \n    // Quote management\n    const addQuote = () => {\n      if (!newQuote.value.trim() || !selectedPaper.value) return\n      \n      if (!selectedPaper.value.quotes) {\n        selectedPaper.value.quotes = []\n      }\n      \n      selectedPaper.value.quotes.push(newQuote.value.trim())\n      newQuote.value = ''\n    }\n    \n    const removeQuote = (index) => {\n      if (!selectedPaper.value || !selectedPaper.value.quotes) return\n      \n      selectedPaper.value.quotes.splice(index, 1)\n    }\n    \n    // File upload\n    const handleFileUpload = (event) => {\n      selectedFile.value = event.target.files[0]\n    }\n    \n    // Add new paper\n    const addNewPaper = () => {\n      if (!newPaper.value.title.trim() || !newPaper.value.summary.trim() || \n          !newPaper.value.year.trim() || !selectedFile.value) {\n        alert('يرجى ملء جميع الحقول المطلوبة')\n        return\n      }\n      \n      isUploading.value = true\n      \n      // Create a unique filename\n      const ext = selectedFile.value.name.split('.').pop()\n      const fileName = `${newPaper.value.title.trim().replace(/\\s+/g, '_')}_${Date.now()}.${ext}`\n      const storagePath = `papers/${fileName}`\n      \n      // Upload file to Firebase Storage\n      const fileRef = storageRef(storage, storagePath)\n      const uploadTask = uploadBytesResumable(fileRef, selectedFile.value)\n      \n      uploadTask.on('state_changed', \n        (snapshot) => {\n          // Progress monitoring if needed\n          const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n          console.log('Upload is ' + progress + '% done')\n        }, \n        (error) => {\n          // Error handling\n          console.error('Error uploading file:', error)\n          isUploading.value = false\n          alert('حدث خطأ أثناء رفع الملف')\n        }, \n        () => {\n          // Upload completed successfully\n          getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n            // Save paper data to Firebase Database\n            const papersRef = dbRef(db, 'papers')\n            push(papersRef, {\n              title: newPaper.value.title,\n              summary: newPaper.value.summary,\n              year: newPaper.value.year,\n              methodology: newPaper.value.methodology,\n              fileName: fileName,\n              url: downloadURL,\n              storagePath: storagePath,\n              timestamp: Date.now(),\n              quotes: [],\n              notes: ''\n            })\n            \n            // Reset form\n            newPaper.value = {\n              title: '',\n              summary: '',\n              year: '',\n              methodology: 'تجريبية',\n              notes: '',\n              quotes: []\n            }\n            selectedFile.value = null\n            isUploading.value = false\n            showAddPaperModal.value = false\n          })\n        }\n      )\n    }\n    \n    // Helper functions\n    const truncateText = (text, maxLength) => {\n      if (!text) return ''\n      return text.length > maxLength ? text.substring(0, maxLength) + '...' : text\n    }\n    \n    const formatDate = (timestamp) => {\n      if (!timestamp) return ''\n      const date = new Date(timestamp)\n      return date.toLocaleDateString('ar-EG')\n    }\n    \n    // Initialize\n    onMounted(() => {\n      loadPapers()\n    })\n    \n    return {\n      papers,\n      selectedPaper,\n      newQuote,\n      searchQuery,\n      filterYear,\n      filterMethodology,\n      availableYears,\n      filteredPapers,\n      showAddPaperModal,\n      newPaper,\n      isUploading,\n      openPaperDetails,\n      closeDetails,\n      savePaperChanges,\n      deletePaper,\n      addQuote,\n      removeQuote,\n      handleFileUpload,\n      addNewPaper,\n      truncateText,\n      formatDate\n    }\n  }\n}\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}