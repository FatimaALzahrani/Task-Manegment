{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { ref, computed, onMounted } from 'vue';\nimport { getDatabase, ref as dbRef, onValue, push, update, remove } from 'firebase/database';\nexport default {\n  name: 'Tasks',\n  setup() {\n    const db = getDatabase();\n\n    // Task board columns\n    const columns = ref([{\n      id: 'tasks',\n      name: 'لم تبدأ بعد'\n    }, {\n      id: 'inprogress',\n      name: 'يتم العمل عليها'\n    }, {\n      id: 'review',\n      name: 'تحتاج مراجعة'\n    }, {\n      id: 'approved',\n      name: 'تمت'\n    }]);\n\n    // Available tags and users\n    const availableTags = ref(['بحث', 'كتابة', 'تحليل', 'تسجيل', 'مراجعة']);\n    const users = ref(['باحث', 'مشرف', 'مساعد باحث', 'مراجع']);\n\n    // Tasks data\n    const tasks = ref([]);\n    const selectedTask = ref(null);\n    const newComment = ref('');\n\n    // Filters\n    const searchQuery = ref('');\n    const filterPriority = ref('');\n    const filterTag = ref('');\n\n    // New task modal\n    const showAddTaskModal = ref(false);\n    const newTask = ref({\n      name: '',\n      description: '',\n      column: 'tasks',\n      priority: 'متوسط',\n      dueDate: '',\n      tags: [],\n      assignee: '',\n      comments: []\n    });\n\n    // Load tasks from Firebase\n    const loadTasks = () => {\n      const tasksRef = dbRef(db, 'tasks');\n      onValue(tasksRef, snapshot => {\n        const data = snapshot.val();\n        if (data) {\n          tasks.value = Object.entries(data).map(([id, task]) => ({\n            id,\n            ...task,\n            comments: task.comments || [],\n            tags: task.tags || []\n          }));\n        } else {\n          tasks.value = [];\n        }\n      });\n    };\n\n    // Filter tasks by column\n    const getTasksForColumn = columnId => {\n      return tasks.value.filter(task => {\n        // Filter by column\n        if (task.column !== columnId) return false;\n\n        // Filter by search query\n        if (searchQuery.value && !task.name.includes(searchQuery.value) && !task.description.includes(searchQuery.value)) {\n          return false;\n        }\n\n        // Filter by priority\n        if (filterPriority.value && task.priority !== filterPriority.value) {\n          return false;\n        }\n\n        // Filter by tag\n        if (filterTag.value && (!task.tags || !task.tags.includes(filterTag.value))) {\n          return false;\n        }\n        return true;\n      });\n    };\n\n    // Task details\n    const openTaskDetails = task => {\n      selectedTask.value = {\n        ...task\n      };\n    };\n    const closeTaskDetails = () => {\n      selectedTask.value = null;\n      newComment.value = '';\n    };\n    const saveTaskChanges = () => {\n      if (!selectedTask.value) return;\n      const taskRef = dbRef(db, `tasks/${selectedTask.value.id}`);\n      update(taskRef, {\n        name: selectedTask.value.name,\n        description: selectedTask.value.description,\n        column: selectedTask.value.column,\n        priority: selectedTask.value.priority,\n        dueDate: selectedTask.value.dueDate,\n        tags: selectedTask.value.tags || [],\n        assignee: selectedTask.value.assignee,\n        comments: selectedTask.value.comments || []\n      });\n      closeTaskDetails();\n    };\n    const deleteTask = () => {\n      if (!selectedTask.value) return;\n      if (confirm('هل أنت متأكد من حذف هذه المهمة؟')) {\n        const taskRef = dbRef(db, `tasks/${selectedTask.value.id}`);\n        remove(taskRef);\n        closeTaskDetails();\n      }\n    };\n    const addComment = () => {\n      if (!newComment.value.trim() || !selectedTask.value) return;\n      if (!selectedTask.value.comments) {\n        selectedTask.value.comments = [];\n      }\n      selectedTask.value.comments.push(newComment.value.trim());\n      newComment.value = '';\n    };\n\n    // Tag management\n    const toggleTag = tag => {\n      if (!selectedTask.value) return;\n      if (!selectedTask.value.tags) {\n        selectedTask.value.tags = [];\n      }\n      const index = selectedTask.value.tags.indexOf(tag);\n      if (index === -1) {\n        selectedTask.value.tags.push(tag);\n      } else {\n        selectedTask.value.tags.splice(index, 1);\n      }\n    };\n    const toggleNewTaskTag = tag => {\n      const index = newTask.value.tags.indexOf(tag);\n      if (index === -1) {\n        newTask.value.tags.push(tag);\n      } else {\n        newTask.value.tags.splice(index, 1);\n      }\n    };\n\n    // Add new task\n    const addNewTask = () => {\n      if (!newTask.value.name.trim()) {\n        alert('يرجى إدخال اسم المهمة');\n        return;\n      }\n      const tasksRef = dbRef(db, 'tasks');\n      push(tasksRef, {\n        name: newTask.value.name,\n        description: newTask.value.description,\n        column: newTask.value.column,\n        priority: newTask.value.priority,\n        dueDate: newTask.value.dueDate,\n        tags: newTask.value.tags,\n        assignee: newTask.value.assignee,\n        comments: newTask.value.comments,\n        dateCreated: new Date().toISOString()\n      });\n\n      // Reset form\n      newTask.value = {\n        name: '',\n        description: '',\n        column: 'tasks',\n        priority: 'متوسط',\n        dueDate: '',\n        tags: [],\n        assignee: '',\n        comments: []\n      };\n      showAddTaskModal.value = false;\n    };\n\n    // Helper functions\n    const truncateText = (text, maxLength) => {\n      if (!text) return '';\n      return text.length > maxLength ? text.substring(0, maxLength) + '...' : text;\n    };\n    const getPriorityClass = priority => {\n      switch (priority) {\n        case 'عاجل':\n          return 'bg-red-100 text-red-800';\n        case 'متوسط':\n          return 'bg-yellow-100 text-yellow-800';\n        case 'منخفض':\n          return 'bg-green-100 text-green-800';\n        default:\n          return 'bg-gray-100 text-gray-800';\n      }\n    };\n\n    // Initialize\n    onMounted(() => {\n      loadTasks();\n\n      // Initialize drag and drop (would be implemented with vuedraggable in a real app)\n      // This is a placeholder for the actual implementation\n      console.log('Drag and drop would be initialized here');\n    });\n    return {\n      columns,\n      tasks,\n      selectedTask,\n      newComment,\n      searchQuery,\n      filterPriority,\n      filterTag,\n      availableTags,\n      users,\n      showAddTaskModal,\n      newTask,\n      getTasksForColumn,\n      openTaskDetails,\n      closeTaskDetails,\n      saveTaskChanges,\n      deleteTask,\n      addComment,\n      toggleTag,\n      toggleNewTaskTag,\n      addNewTask,\n      truncateText,\n      getPriorityClass\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","getDatabase","dbRef","onValue","push","update","remove","name","setup","db","columns","id","availableTags","users","tasks","selectedTask","newComment","searchQuery","filterPriority","filterTag","showAddTaskModal","newTask","description","column","priority","dueDate","tags","assignee","comments","loadTasks","tasksRef","snapshot","data","val","value","Object","entries","map","task","getTasksForColumn","columnId","filter","includes","openTaskDetails","closeTaskDetails","saveTaskChanges","taskRef","deleteTask","confirm","addComment","trim","toggleTag","tag","index","indexOf","splice","toggleNewTaskTag","addNewTask","alert","dateCreated","Date","toISOString","truncateText","text","maxLength","length","substring","getPriorityClass","console","log"],"sources":["C:\\Users\\فاطمة الزهراني\\Downloads\\research-task-manager-updated\\task-manager\\src\\views\\Tasks.vue"],"sourcesContent":["<template>\n  <div class=\"fade-in\">\n    <div class=\"flex justify-between items-center mb-6\">\n      <h1 class=\"text-2xl font-bold text-gray-800\">إدارة المهام</h1>\n      <button @click=\"showAddTaskModal = true\" class=\"btn btn-primary\">\n        <i class=\"fas fa-plus ml-2\"></i>إضافة مهمة جديدة\n      </button>\n    </div>\n    \n    <div class=\"bg-white rounded-lg shadow-md p-4 mb-6\">\n      <div class=\"flex flex-wrap gap-4\">\n        <div class=\"relative\">\n          <input \n            type=\"text\" \n            v-model=\"searchQuery\" \n            placeholder=\"بحث في المهام...\" \n            class=\"form-input py-2 pl-10 pr-4\"\n          >\n          <i class=\"fas fa-search absolute right-3 top-3 text-gray-400\"></i>\n        </div>\n        \n        <select v-model=\"filterPriority\" class=\"form-input py-2\">\n          <option value=\"\">كل الأولويات</option>\n          <option value=\"عاجل\">عاجل</option>\n          <option value=\"متوسط\">متوسط</option>\n          <option value=\"منخفض\">منخفض</option>\n        </select>\n        \n        <select v-model=\"filterTag\" class=\"form-input py-2\">\n          <option value=\"\">كل التصنيفات</option>\n          <option value=\"بحث\">بحث</option>\n          <option value=\"كتابة\">كتابة</option>\n          <option value=\"تحليل\">تحليل</option>\n          <option value=\"تسجيل\">تسجيل</option>\n          <option value=\"مراجعة\">مراجعة</option>\n        </select>\n      </div>\n    </div>\n    \n    <div class=\"task-board\">\n      <div v-for=\"column in columns\" :key=\"column.id\" class=\"task-column\">\n        <div class=\"flex justify-between items-center mb-4\">\n          <h3 class=\"font-bold text-gray-700\">{{ column.name }}</h3>\n          <span class=\"bg-gray-200 text-gray-700 text-sm py-1 px-2 rounded-full\">\n            {{ getTasksForColumn(column.id).length }}\n          </span>\n        </div>\n        \n        <div \n          class=\"min-h-[200px]\"\n          :id=\"column.id\"\n          :data-column-id=\"column.id\"\n        >\n          <div \n            v-for=\"task in getTasksForColumn(column.id)\" \n            :key=\"task.id\"\n            class=\"task-card\"\n            :data-task-id=\"task.id\"\n            @click=\"openTaskDetails(task)\"\n          >\n            <div class=\"flex justify-between items-start\">\n              <h4 class=\"font-medium text-gray-800\">{{ task.name }}</h4>\n              <span \n                class=\"px-2 py-1 text-xs rounded-full\" \n                :class=\"getPriorityClass(task.priority)\"\n              >\n                {{ task.priority }}\n              </span>\n            </div>\n            \n            <p v-if=\"task.description\" class=\"text-sm text-gray-600 mt-2\">\n              {{ truncateText(task.description, 100) }}\n            </p>\n            \n            <div class=\"flex justify-between items-center mt-3\">\n              <div class=\"flex space-x-1 space-x-reverse\">\n                <span \n                  v-for=\"tag in task.tags\" \n                  :key=\"tag\"\n                  class=\"px-2 py-1 text-xs bg-gray-100 text-gray-600 rounded-full\"\n                >\n                  {{ tag }}\n                </span>\n              </div>\n              \n              <div class=\"text-xs text-gray-500\">\n                <i class=\"far fa-calendar-alt ml-1\"></i>{{ task.dueDate || 'لا يوجد موعد' }}\n              </div>\n            </div>\n            \n            <div v-if=\"task.assignee\" class=\"mt-3 flex items-center text-xs text-gray-500\">\n              <img \n                :src=\"`https://ui-avatars.com/api/?name=${encodeURIComponent(task.assignee)}&size=24&background=0D8ABC&color=fff`\" \n                :alt=\"task.assignee\" \n                class=\"w-6 h-6 rounded-full ml-2\"\n              >\n              {{ task.assignee }}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <!-- Task Details Modal -->\n    <div v-if=\"selectedTask\" class=\"modal-overlay\" @click.self=\"closeTaskDetails\">\n      <div class=\"modal-content\">\n        <div class=\"flex justify-between items-center mb-4\">\n          <h2 class=\"text-xl font-bold text-gray-800\">{{ selectedTask.name }}</h2>\n          <button @click=\"closeTaskDetails\" class=\"text-gray-500 hover:text-gray-700\">\n            <i class=\"fas fa-times\"></i>\n          </button>\n        </div>\n        \n        <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-4\">\n          <div>\n            <label class=\"form-label\">الحالة</label>\n            <select v-model=\"selectedTask.column\" class=\"form-input\">\n              <option v-for=\"column in columns\" :key=\"column.id\" :value=\"column.id\">\n                {{ column.name }}\n              </option>\n            </select>\n          </div>\n          \n          <div>\n            <label class=\"form-label\">الأولوية</label>\n            <select v-model=\"selectedTask.priority\" class=\"form-input\">\n              <option value=\"عاجل\">عاجل</option>\n              <option value=\"متوسط\">متوسط</option>\n              <option value=\"منخفض\">منخفض</option>\n            </select>\n          </div>\n          \n          <div>\n            <label class=\"form-label\">تاريخ الاستحقاق</label>\n            <input type=\"date\" v-model=\"selectedTask.dueDate\" class=\"form-input\">\n          </div>\n        </div>\n        \n        <div class=\"mb-4\">\n          <label class=\"form-label\">الوصف</label>\n          <textarea v-model=\"selectedTask.description\" rows=\"4\" class=\"form-input\"></textarea>\n        </div>\n        \n        <div class=\"mb-4\">\n          <label class=\"form-label\">التصنيفات</label>\n          <div class=\"flex flex-wrap gap-2 mt-2\">\n            <div \n              v-for=\"tag in availableTags\" \n              :key=\"tag\"\n              @click=\"toggleTag(tag)\"\n              :class=\"[\n                'px-3 py-1 rounded-full text-sm cursor-pointer transition-colors',\n                selectedTask.tags && selectedTask.tags.includes(tag) \n                  ? 'bg-primary-100 text-primary-800 border border-primary-300' \n                  : 'bg-gray-100 text-gray-600 border border-gray-200 hover:bg-gray-200'\n              ]\"\n            >\n              {{ tag }}\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"mb-4\">\n          <label class=\"form-label\">المسؤول</label>\n          <select v-model=\"selectedTask.assignee\" class=\"form-input\">\n            <option value=\"\">غير معين</option>\n            <option v-for=\"user in users\" :key=\"user\">{{ user }}</option>\n          </select>\n        </div>\n        \n        <div class=\"mb-4\">\n          <label class=\"form-label\">التعليقات</label>\n          <div class=\"bg-gray-50 p-3 rounded-lg max-h-40 overflow-y-auto mb-2\">\n            <div v-if=\"!selectedTask.comments || selectedTask.comments.length === 0\" class=\"text-gray-500 text-sm\">\n              لا توجد تعليقات بعد\n            </div>\n            <div v-else v-for=\"(comment, index) in selectedTask.comments\" :key=\"index\" class=\"mb-3\">\n              <div class=\"flex items-start\">\n                <img \n                  src=\"https://ui-avatars.com/api/?name=باحث&size=32&background=0D8ABC&color=fff\" \n                  alt=\"صورة المستخدم\" \n                  class=\"w-8 h-8 rounded-full ml-2\"\n                >\n                <div class=\"bg-white p-2 rounded-lg shadow-sm flex-grow\">\n                  <p class=\"text-sm\">{{ comment }}</p>\n                  <span class=\"text-xs text-gray-500\">منذ دقائق</span>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          <div class=\"flex\">\n            <input \n              type=\"text\" \n              v-model=\"newComment\" \n              placeholder=\"أضف تعليقًا...\" \n              class=\"form-input flex-grow\"\n              @keyup.enter=\"addComment\"\n            >\n            <button @click=\"addComment\" class=\"btn btn-primary mr-2\">إضافة</button>\n          </div>\n        </div>\n        \n        <div class=\"flex justify-between\">\n          <div>\n            <button @click=\"saveTaskChanges\" class=\"btn btn-primary ml-2\">حفظ التغييرات</button>\n            <button @click=\"closeTaskDetails\" class=\"btn btn-outline\">إلغاء</button>\n          </div>\n          <button @click=\"deleteTask\" class=\"btn btn-danger\">حذف المهمة</button>\n        </div>\n      </div>\n    </div>\n    \n    <!-- Add Task Modal -->\n    <div v-if=\"showAddTaskModal\" class=\"modal-overlay\" @click.self=\"showAddTaskModal = false\">\n      <div class=\"modal-content\">\n        <div class=\"flex justify-between items-center mb-4\">\n          <h2 class=\"text-xl font-bold text-gray-800\">إضافة مهمة جديدة</h2>\n          <button @click=\"showAddTaskModal = false\" class=\"text-gray-500 hover:text-gray-700\">\n            <i class=\"fas fa-times\"></i>\n          </button>\n        </div>\n        \n        <div class=\"mb-4\">\n          <label class=\"form-label\">اسم المهمة</label>\n          <input type=\"text\" v-model=\"newTask.name\" class=\"form-input\" required>\n        </div>\n        \n        <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-4\">\n          <div>\n            <label class=\"form-label\">الحالة</label>\n            <select v-model=\"newTask.column\" class=\"form-input\">\n              <option v-for=\"column in columns\" :key=\"column.id\" :value=\"column.id\">\n                {{ column.name }}\n              </option>\n            </select>\n          </div>\n          \n          <div>\n            <label class=\"form-label\">الأولوية</label>\n            <select v-model=\"newTask.priority\" class=\"form-input\">\n              <option value=\"عاجل\">عاجل</option>\n              <option value=\"متوسط\">متوسط</option>\n              <option value=\"منخفض\">منخفض</option>\n            </select>\n          </div>\n          \n          <div>\n            <label class=\"form-label\">تاريخ الاستحقاق</label>\n            <input type=\"date\" v-model=\"newTask.dueDate\" class=\"form-input\">\n          </div>\n        </div>\n        \n        <div class=\"mb-4\">\n          <label class=\"form-label\">الوصف</label>\n          <textarea v-model=\"newTask.description\" rows=\"4\" class=\"form-input\"></textarea>\n        </div>\n        \n        <div class=\"mb-4\">\n          <label class=\"form-label\">التصنيفات</label>\n          <div class=\"flex flex-wrap gap-2 mt-2\">\n            <div \n              v-for=\"tag in availableTags\" \n              :key=\"tag\"\n              @click=\"toggleNewTaskTag(tag)\"\n              :class=\"[\n                'px-3 py-1 rounded-full text-sm cursor-pointer transition-colors',\n                newTask.tags.includes(tag) \n                  ? 'bg-primary-100 text-primary-800 border border-primary-300' \n                  : 'bg-gray-100 text-gray-600 border border-gray-200 hover:bg-gray-200'\n              ]\"\n            >\n              {{ tag }}\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"mb-4\">\n          <label class=\"form-label\">المسؤول</label>\n          <select v-model=\"newTask.assignee\" class=\"form-input\">\n            <option value=\"\">غير معين</option>\n            <option v-for=\"user in users\" :key=\"user\">{{ user }}</option>\n          </select>\n        </div>\n        \n        <div class=\"flex justify-end\">\n          <button @click=\"showAddTaskModal = false\" class=\"btn btn-outline ml-2\">إلغاء</button>\n          <button @click=\"addNewTask\" class=\"btn btn-primary\">إضافة المهمة</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted } from 'vue'\nimport { getDatabase, ref as dbRef, onValue, push, update, remove } from 'firebase/database'\n\nexport default {\n  name: 'Tasks',\n  setup() {\n    const db = getDatabase()\n    \n    // Task board columns\n    const columns = ref([\n      { id: 'tasks', name: 'لم تبدأ بعد' },\n      { id: 'inprogress', name: 'يتم العمل عليها' },\n      { id: 'review', name: 'تحتاج مراجعة' },\n      { id: 'approved', name: 'تمت' }\n    ])\n    \n    // Available tags and users\n    const availableTags = ref(['بحث', 'كتابة', 'تحليل', 'تسجيل', 'مراجعة'])\n    const users = ref(['باحث', 'مشرف', 'مساعد باحث', 'مراجع'])\n    \n    // Tasks data\n    const tasks = ref([])\n    const selectedTask = ref(null)\n    const newComment = ref('')\n    \n    // Filters\n    const searchQuery = ref('')\n    const filterPriority = ref('')\n    const filterTag = ref('')\n    \n    // New task modal\n    const showAddTaskModal = ref(false)\n    const newTask = ref({\n      name: '',\n      description: '',\n      column: 'tasks',\n      priority: 'متوسط',\n      dueDate: '',\n      tags: [],\n      assignee: '',\n      comments: []\n    })\n    \n    // Load tasks from Firebase\n    const loadTasks = () => {\n      const tasksRef = dbRef(db, 'tasks')\n      onValue(tasksRef, (snapshot) => {\n        const data = snapshot.val()\n        if (data) {\n          tasks.value = Object.entries(data).map(([id, task]) => ({\n            id,\n            ...task,\n            comments: task.comments || [],\n            tags: task.tags || []\n          }))\n        } else {\n          tasks.value = []\n        }\n      })\n    }\n    \n    // Filter tasks by column\n    const getTasksForColumn = (columnId) => {\n      return tasks.value.filter(task => {\n        // Filter by column\n        if (task.column !== columnId) return false\n        \n        // Filter by search query\n        if (searchQuery.value && !task.name.includes(searchQuery.value) && \n            !task.description.includes(searchQuery.value)) {\n          return false\n        }\n        \n        // Filter by priority\n        if (filterPriority.value && task.priority !== filterPriority.value) {\n          return false\n        }\n        \n        // Filter by tag\n        if (filterTag.value && (!task.tags || !task.tags.includes(filterTag.value))) {\n          return false\n        }\n        \n        return true\n      })\n    }\n    \n    // Task details\n    const openTaskDetails = (task) => {\n      selectedTask.value = { ...task }\n    }\n    \n    const closeTaskDetails = () => {\n      selectedTask.value = null\n      newComment.value = ''\n    }\n    \n    const saveTaskChanges = () => {\n      if (!selectedTask.value) return\n      \n      const taskRef = dbRef(db, `tasks/${selectedTask.value.id}`)\n      update(taskRef, {\n        name: selectedTask.value.name,\n        description: selectedTask.value.description,\n        column: selectedTask.value.column,\n        priority: selectedTask.value.priority,\n        dueDate: selectedTask.value.dueDate,\n        tags: selectedTask.value.tags || [],\n        assignee: selectedTask.value.assignee,\n        comments: selectedTask.value.comments || []\n      })\n      \n      closeTaskDetails()\n    }\n    \n    const deleteTask = () => {\n      if (!selectedTask.value) return\n      \n      if (confirm('هل أنت متأكد من حذف هذه المهمة؟')) {\n        const taskRef = dbRef(db, `tasks/${selectedTask.value.id}`)\n        remove(taskRef)\n        closeTaskDetails()\n      }\n    }\n    \n    const addComment = () => {\n      if (!newComment.value.trim() || !selectedTask.value) return\n      \n      if (!selectedTask.value.comments) {\n        selectedTask.value.comments = []\n      }\n      \n      selectedTask.value.comments.push(newComment.value.trim())\n      newComment.value = ''\n    }\n    \n    // Tag management\n    const toggleTag = (tag) => {\n      if (!selectedTask.value) return\n      \n      if (!selectedTask.value.tags) {\n        selectedTask.value.tags = []\n      }\n      \n      const index = selectedTask.value.tags.indexOf(tag)\n      if (index === -1) {\n        selectedTask.value.tags.push(tag)\n      } else {\n        selectedTask.value.tags.splice(index, 1)\n      }\n    }\n    \n    const toggleNewTaskTag = (tag) => {\n      const index = newTask.value.tags.indexOf(tag)\n      if (index === -1) {\n        newTask.value.tags.push(tag)\n      } else {\n        newTask.value.tags.splice(index, 1)\n      }\n    }\n    \n    // Add new task\n    const addNewTask = () => {\n      if (!newTask.value.name.trim()) {\n        alert('يرجى إدخال اسم المهمة')\n        return\n      }\n      \n      const tasksRef = dbRef(db, 'tasks')\n      push(tasksRef, {\n        name: newTask.value.name,\n        description: newTask.value.description,\n        column: newTask.value.column,\n        priority: newTask.value.priority,\n        dueDate: newTask.value.dueDate,\n        tags: newTask.value.tags,\n        assignee: newTask.value.assignee,\n        comments: newTask.value.comments,\n        dateCreated: new Date().toISOString()\n      })\n      \n      // Reset form\n      newTask.value = {\n        name: '',\n        description: '',\n        column: 'tasks',\n        priority: 'متوسط',\n        dueDate: '',\n        tags: [],\n        assignee: '',\n        comments: []\n      }\n      \n      showAddTaskModal.value = false\n    }\n    \n    // Helper functions\n    const truncateText = (text, maxLength) => {\n      if (!text) return ''\n      return text.length > maxLength ? text.substring(0, maxLength) + '...' : text\n    }\n    \n    const getPriorityClass = (priority) => {\n      switch (priority) {\n        case 'عاجل': return 'bg-red-100 text-red-800'\n        case 'متوسط': return 'bg-yellow-100 text-yellow-800'\n        case 'منخفض': return 'bg-green-100 text-green-800'\n        default: return 'bg-gray-100 text-gray-800'\n      }\n    }\n    \n    // Initialize\n    onMounted(() => {\n      loadTasks()\n      \n      // Initialize drag and drop (would be implemented with vuedraggable in a real app)\n      // This is a placeholder for the actual implementation\n      console.log('Drag and drop would be initialized here')\n    })\n    \n    return {\n      columns,\n      tasks,\n      selectedTask,\n      newComment,\n      searchQuery,\n      filterPriority,\n      filterTag,\n      availableTags,\n      users,\n      showAddTaskModal,\n      newTask,\n      getTasksForColumn,\n      openTaskDetails,\n      closeTaskDetails,\n      saveTaskChanges,\n      deleteTask,\n      addComment,\n      toggleTag,\n      toggleNewTaskTag,\n      addNewTask,\n      truncateText,\n      getPriorityClass\n    }\n  }\n}\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}