{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport { ref, onMounted, computed } from \"vue\";\nimport { taskService, literatureService, dataService } from \"../services/firebase\";\nexport default {\n  name: \"Home\",\n  setup() {\n    // Data states\n    const tasks = ref([]);\n    const papers = ref([]);\n    const children = ref([]);\n    const updates = ref([]);\n    const loading = ref(true);\n\n    // Computed values\n    const totalTasks = computed(() => tasks.value.length);\n    const completedTasks = computed(() => tasks.value.filter(task => task.status === \"done\" || task.column === \"done\").length);\n    const completionPercentage = computed(() => {\n      if (totalTasks.value === 0) return 0;\n      return Math.round(completedTasks.value / totalTasks.value * 100);\n    });\n    const papersCount = computed(() => papers.value.length);\n    const participantsCount = computed(() => children.value.length);\n\n    // Task categories with dynamic percentages\n    const taskCategories = computed(() => {\n      // Define categories and their corresponding tags or identifiers\n      const categories = [{\n        name: \"جمع البيانات\",\n        tags: [\"جمع البيانات\", \"تسجيل\", \"مقابلة\"],\n        icon: \"fa-database\",\n        bgColor: \"bg-blue-500\",\n        barColor: \"bg-blue-500\"\n      }, {\n        name: \"تحليل البيانات\",\n        tags: [\"تحليل\", \"إحصاء\", \"معالجة\"],\n        icon: \"fa-chart-bar\",\n        bgColor: \"bg-green-500\",\n        barColor: \"bg-green-500\"\n      }, {\n        name: \"كتابة البحث\",\n        tags: [\"كتابة\", \"توثيق\", \"مراجعة أدبية\"],\n        icon: \"fa-pen\",\n        bgColor: \"bg-purple-500\",\n        barColor: \"bg-purple-500\"\n      }, {\n        name: \"المراجعة\",\n        tags: [\"مراجعة\", \"تدقيق\", \"تصحيح\"],\n        icon: \"fa-check\",\n        bgColor: \"bg-yellow-500\",\n        barColor: \"bg-yellow-500\"\n      }];\n\n      // Calculate completion percentage for each category\n      return categories.map(category => {\n        // Filter tasks that belong to this category\n        const categoryTasks = tasks.value.filter(task => {\n          // Check if task has any tag that matches this category\n          if (task.tags && Array.isArray(task.tags)) {\n            return task.tags.some(tag => category.tags.includes(tag));\n          }\n          // Check if task title or description contains category keywords\n          return category.tags.some(tag => task.title && task.title.includes(tag) || task.description && task.description.includes(tag));\n        });\n\n        // Calculate completion percentage\n        const totalCategoryTasks = categoryTasks.length;\n        const completedCategoryTasks = categoryTasks.filter(task => task.status === \"done\" || task.column === \"done\").length;\n        const percentage = totalCategoryTasks > 0 ? Math.round(completedCategoryTasks / totalCategoryTasks * 100) : 0;\n        return {\n          ...category,\n          percentage\n        };\n      });\n    });\n\n    // Get upcoming tasks (not completed, sorted by due date)\n    const upcomingTasks = computed(() => {\n      return tasks.value.filter(task => task.status !== \"done\" && task.column !== \"done\" && task.dueDate).sort((a, b) => new Date(a.dueDate) - new Date(b.dueDate)).slice(0, 3); // Get only the first 3 upcoming tasks\n    });\n\n    // Get recent papers (sorted by timestamp, newest first)\n    const recentPapers = computed(() => {\n      return [...papers.value].sort((a, b) => {\n        const dateA = a.timestamp || new Date(a.year).getTime();\n        const dateB = b.timestamp || new Date(b.year).getTime();\n        return dateB - dateA;\n      }).slice(0, 3); // Get only the first 3 recent papers\n    });\n\n    // Generate recent updates based on tasks and papers\n    const recentUpdates = computed(() => {\n      const taskUpdates = tasks.value.filter(task => task.dateCreated || task.lastModified).map(task => ({\n        id: task.id,\n        title: `تم ${task.status === \"done\" || task.column === \"done\" ? \"إكمال\" : \"تحديث\"} مهمة: ${task.title || task.name}`,\n        description: task.description || \"تم تحديث حالة المهمة\",\n        timestamp: task.lastModified || task.dateCreated,\n        type: \"task\"\n      }));\n      const paperUpdates = papers.value.filter(paper => paper.timestamp).map(paper => ({\n        id: paper.id,\n        title: `تمت إضافة ورقة علمية جديدة`,\n        description: paper.title,\n        timestamp: paper.timestamp,\n        type: \"paper\"\n      }));\n\n      // Combine and sort all updates by timestamp (newest first)\n      return [...taskUpdates, ...paperUpdates].sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp)).slice(0, 3); // Get only the first 3 recent updates\n    });\n\n    // Helper functions\n    const formatDate = dateString => {\n      if (!dateString) return \"غير محدد\";\n      const date = new Date(dateString);\n      if (isNaN(date.getTime())) return dateString; // Return as is if invalid date\n\n      // Format date in Arabic style\n      const options = {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\"\n      };\n      return date.toLocaleDateString(\"ar-SA\", options);\n    };\n    const getPriorityClass = priority => {\n      switch (priority?.toLowerCase()) {\n        case \"high\":\n        case \"عالي\":\n        case \"عاجل\":\n          return \"bg-red-100 text-red-800\";\n        case \"medium\":\n        case \"متوسط\":\n          return \"bg-yellow-100 text-yellow-800\";\n        case \"low\":\n        case \"منخفض\":\n          return \"bg-green-100 text-green-800\";\n        default:\n          return \"bg-gray-100 text-gray-800\";\n      }\n    };\n    const getUpdateBorderColor = type => {\n      switch (type) {\n        case \"task\":\n          return \"border-blue-500\";\n        case \"paper\":\n          return \"border-green-500\";\n        case \"child\":\n          return \"border-purple-500\";\n        default:\n          return \"border-gray-500\";\n      }\n    };\n\n    // Fetch data from Firebase\n    onMounted(() => {\n      loading.value = true;\n\n      // Helper function to check if all data is loaded\n      const checkLoading = () => {\n        if (tasks.value !== undefined && papers.value !== undefined && children.value !== undefined) {\n          loading.value = false;\n        }\n      };\n\n      // Fetch tasks\n      taskService.getTasks(data => {\n        tasks.value = data;\n        checkLoading();\n      }, error => {\n        console.error(\"خطأ في تحميل المهام:\", error);\n        loading.value = false;\n      });\n\n      // Fetch papers\n      literatureService.getPapers(data => {\n        papers.value = data;\n        checkLoading();\n      });\n\n      // Fetch children\n      dataService.getChildren(data => {\n        children.value = data;\n        checkLoading();\n      });\n    });\n    return {\n      // Data\n      tasks,\n      papers,\n      children,\n      loading,\n      // Computed values\n      totalTasks,\n      completedTasks,\n      completionPercentage,\n      papersCount,\n      participantsCount,\n      taskCategories,\n      upcomingTasks,\n      recentPapers,\n      recentUpdates,\n      // Helper functions\n      formatDate,\n      getPriorityClass,\n      getUpdateBorderColor\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","taskService","literatureService","dataService","name","setup","tasks","papers","children","updates","loading","totalTasks","value","length","completedTasks","filter","task","status","column","completionPercentage","Math","round","papersCount","participantsCount","taskCategories","categories","tags","icon","bgColor","barColor","map","category","categoryTasks","Array","isArray","some","tag","includes","title","description","totalCategoryTasks","completedCategoryTasks","percentage","upcomingTasks","dueDate","sort","a","b","Date","slice","recentPapers","dateA","timestamp","year","getTime","dateB","recentUpdates","taskUpdates","dateCreated","lastModified","id","type","paperUpdates","paper","formatDate","dateString","date","isNaN","options","month","day","toLocaleDateString","getPriorityClass","priority","toLowerCase","getUpdateBorderColor","checkLoading","undefined","getTasks","data","error","console","getPapers","getChildren"],"sources":["C:\\Users\\فاطمة الزهراني\\Downloads\\research-task-manager-updated\\task-manager\\src\\views\\Home.vue"],"sourcesContent":["<template>\n  <div class=\"fade-in\">\n    <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n      <div class=\"dashboard-card\">\n        <h3 class=\"text-lg font-semibold text-gray-700 mb-2\">\n          المهام الإجمالية\n        </h3>\n        <p class=\"dashboard-stat\">{{ totalTasks }}</p>\n        <p class=\"text-sm text-gray-500 mt-2\">إجمالي عدد المهام في المشروع</p>\n      </div>\n\n      <div class=\"dashboard-card\">\n        <h3 class=\"text-lg font-semibold text-gray-700 mb-2\">\n          المهام المكتملة\n        </h3>\n        <p class=\"dashboard-stat\">{{ completedTasks }}</p>\n        <p class=\"text-sm text-gray-500 mt-2\">\n          {{ completionPercentage }}% من المهام مكتملة\n        </p>\n      </div>\n\n      <div class=\"dashboard-card\">\n        <h3 class=\"text-lg font-semibold text-gray-700 mb-2\">\n          الأوراق العلمية\n        </h3>\n        <p class=\"dashboard-stat\">{{ papersCount }}</p>\n        <p class=\"text-sm text-gray-500 mt-2\">عدد الأوراق العلمية المراجعة</p>\n      </div>\n\n      <div class=\"dashboard-card\">\n        <h3 class=\"text-lg font-semibold text-gray-700 mb-2\">المشاركون</h3>\n        <p class=\"dashboard-stat\">{{ participantsCount }}</p>\n        <p class=\"text-sm text-gray-500 mt-2\">عدد المشاركين في الدراسة</p>\n      </div>\n    </div>\n\n    <div class=\"dashboard-card mb-8\">\n      <h3 class=\"text-lg font-semibold text-gray-700 mb-4\">\n        رابط الورقة العلمية\n      </h3>\n      <div class=\"flex justify-center\">\n        <a\n          href=\"https://www.overleaf.com/4646177466qdcvydfgtqbh#dbd4ca\"\n          target=\"_blank\"\n          class=\"btn btn-primary flex items-center justify-center\"\n        >\n          <i class=\"fas fa-file-alt ml-2\"></i>\n          الورقة العلمية على Overleaf\n        </a>\n      </div>\n    </div>\n\n    <div class=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n      <div class=\"dashboard-card lg:col-span-2\">\n        <div class=\"flex justify-between items-center mb-4\">\n          <h3 class=\"text-lg font-semibold text-gray-700\">تقدم المهام</h3>\n          <router-link\n            to=\"/tasks\"\n            class=\"text-primary-600 hover:text-primary-800 text-sm\"\n          >\n            عرض الكل <i class=\"fas fa-arrow-left mr-1\"></i>\n          </router-link>\n        </div>\n\n        <div class=\"mb-4\">\n          <div class=\"flex justify-between mb-1\">\n            <span class=\"text-sm font-medium text-gray-700\"\n              >التقدم الإجمالي</span\n            >\n            <span class=\"text-sm font-medium text-gray-700\"\n              >{{ completionPercentage }}%</span\n            >\n          </div>\n          <div class=\"w-full bg-gray-200 rounded-full h-2.5\">\n            <div\n              class=\"bg-primary-600 h-2.5 rounded-full\"\n              :style=\"{ width: completionPercentage + '%' }\"\n            ></div>\n          </div>\n        </div>\n\n        <div class=\"space-y-4\">\n          <div\n            v-for=\"(category, index) in taskCategories\"\n            :key=\"index\"\n            class=\"flex items-center\"\n          >\n            <div\n              class=\"w-8 h-8 rounded-full flex items-center justify-center mr-3\"\n              :class=\"category.bgColor\"\n            >\n              <i :class=\"['fas', category.icon, 'text-white']\"></i>\n            </div>\n            <div class=\"flex-grow\">\n              <div class=\"flex justify-between mb-1\">\n                <span class=\"text-sm font-medium text-gray-700\">{{\n                  category.name\n                }}</span>\n                <span class=\"text-sm font-medium text-gray-700\"\n                  >{{ category.percentage }}%</span\n                >\n              </div>\n              <div class=\"w-full bg-gray-200 rounded-full h-2\">\n                <div\n                  class=\"h-2 rounded-full\"\n                  :class=\"category.barColor\"\n                  :style=\"{ width: category.percentage + '%' }\"\n                ></div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"dashboard-card\">\n        <h3 class=\"text-lg font-semibold text-gray-700 mb-4\">المهام القادمة</h3>\n\n        <div v-if=\"loading\" class=\"text-center py-4\">\n          <i class=\"fas fa-spinner fa-spin text-primary-600 text-xl\"></i>\n          <p class=\"text-gray-600 mt-2\">جاري تحميل البيانات...</p>\n        </div>\n\n        <div v-else-if=\"upcomingTasks.length === 0\" class=\"text-center py-4\">\n          <i class=\"fas fa-check-circle text-green-600 text-xl\"></i>\n          <p class=\"text-gray-600 mt-2\">لا توجد مهام قادمة حالياً</p>\n        </div>\n\n        <div v-else class=\"space-y-3\">\n          <div\n            v-for=\"task in upcomingTasks\"\n            :key=\"task.id\"\n            class=\"p-3 bg-gray-50 rounded-lg\"\n          >\n            <h4 class=\"font-medium text-gray-800\">\n              {{ task.title || task.name }}\n            </h4>\n            <p class=\"text-sm text-gray-600 mt-1\">{{ task.description }}</p>\n            <div class=\"flex justify-between items-center mt-2\">\n              <span class=\"text-xs text-gray-500\">\n                <i class=\"far fa-calendar-alt ml-1\"></i\n                >{{ formatDate(task.dueDate) }}\n              </span>\n              <span\n                class=\"px-2 py-1 text-xs rounded-full\"\n                :class=\"getPriorityClass(task.priority)\"\n              >\n                {{ task.priority }}\n              </span>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"mt-4 text-center\">\n          <router-link to=\"/tasks\" class=\"btn btn-outline text-sm\">\n            <i class=\"fas fa-plus ml-1\"></i>إضافة مهمة جديدة\n          </router-link>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mt-6\">\n      <div class=\"dashboard-card\">\n        <div class=\"flex justify-between items-center mb-4\">\n          <h3 class=\"text-lg font-semibold text-gray-700\">\n            آخر الأوراق العلمية\n          </h3>\n          <router-link\n            to=\"/literature\"\n            class=\"text-primary-600 hover:text-primary-800 text-sm\"\n          >\n            عرض الكل <i class=\"fas fa-arrow-left mr-1\"></i>\n          </router-link>\n        </div>\n\n        <div v-if=\"loading\" class=\"text-center py-4\">\n          <i class=\"fas fa-spinner fa-spin text-primary-600 text-xl\"></i>\n          <p class=\"text-gray-600 mt-2\">جاري تحميل البيانات...</p>\n        </div>\n\n        <div v-else-if=\"recentPapers.length === 0\" class=\"text-center py-4\">\n          <i class=\"fas fa-book text-primary-600 text-xl\"></i>\n          <p class=\"text-gray-600 mt-2\">لا توجد أوراق علمية مضافة حالياً</p>\n        </div>\n\n        <div v-else class=\"space-y-3\">\n          <div\n            v-for=\"paper in recentPapers\"\n            :key=\"paper.id\"\n            class=\"flex items-start p-3 bg-gray-50 rounded-lg\"\n          >\n            <div\n              class=\"w-10 h-10 rounded-lg bg-primary-100 flex items-center justify-center ml-3\"\n            >\n              <i class=\"fas fa-file-alt text-primary-600\"></i>\n            </div>\n            <div class=\"flex-grow\">\n              <h4 class=\"font-medium text-gray-800\">{{ paper.title }}</h4>\n              <p class=\"text-sm text-gray-600 mt-1\">\n                {{ paper.summary || paper.abstract }}\n              </p>\n              <div class=\"flex items-center mt-2 text-xs text-gray-500\">\n                <span class=\"ml-3\"\n                  ><i class=\"far fa-calendar-alt ml-1\"></i\n                  >{{ paper.year }}</span\n                >\n                <span\n                  ><i class=\"fas fa-tag ml-1\"></i\n                  >{{ paper.methodology || paper.type }}</span\n                >\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"dashboard-card\">\n        <div class=\"flex justify-between items-center mb-4\">\n          <h3 class=\"text-lg font-semibold text-gray-700\">آخر التحديثات</h3>\n          <router-link\n            to=\"/tasks\"\n            class=\"text-primary-600 hover:text-primary-800 text-sm\"\n          >\n            عرض الكل <i class=\"fas fa-arrow-left mr-1\"></i>\n          </router-link>\n        </div>\n\n        <div v-if=\"loading\" class=\"text-center py-4\">\n          <i class=\"fas fa-spinner fa-spin text-primary-600 text-xl\"></i>\n          <p class=\"text-gray-600 mt-2\">جاري تحميل البيانات...</p>\n        </div>\n\n        <div v-else-if=\"recentUpdates.length === 0\" class=\"text-center py-4\">\n          <i class=\"fas fa-bell-slash text-gray-500 text-xl\"></i>\n          <p class=\"text-gray-600 mt-2\">لا توجد تحديثات حديثة</p>\n        </div>\n\n        <div v-else class=\"space-y-4\">\n          <div\n            v-for=\"update in recentUpdates\"\n            :key=\"update.id\"\n            class=\"border-r-2 pr-4\"\n            :class=\"getUpdateBorderColor(update.type)\"\n          >\n            <span class=\"text-xs text-gray-500 block mb-1\">{{\n              formatDate(update.timestamp || update.date)\n            }}</span>\n            <h4 class=\"font-medium text-gray-800\">{{ update.title }}</h4>\n            <p class=\"text-sm text-gray-600 mt-1\">{{ update.description }}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted, computed } from \"vue\";\nimport {\n  taskService,\n  literatureService,\n  dataService,\n} from \"../services/firebase\";\n\nexport default {\n  name: \"Home\",\n  setup() {\n    // Data states\n    const tasks = ref([]);\n    const papers = ref([]);\n    const children = ref([]);\n    const updates = ref([]);\n    const loading = ref(true);\n\n    // Computed values\n    const totalTasks = computed(() => tasks.value.length);\n\n    const completedTasks = computed(\n      () =>\n        tasks.value.filter(\n          (task) => task.status === \"done\" || task.column === \"done\"\n        ).length\n    );\n\n    const completionPercentage = computed(() => {\n      if (totalTasks.value === 0) return 0;\n      return Math.round((completedTasks.value / totalTasks.value) * 100);\n    });\n\n    const papersCount = computed(() => papers.value.length);\n\n    const participantsCount = computed(() => children.value.length);\n\n    // Task categories with dynamic percentages\n    const taskCategories = computed(() => {\n      // Define categories and their corresponding tags or identifiers\n      const categories = [\n        {\n          name: \"جمع البيانات\",\n          tags: [\"جمع البيانات\", \"تسجيل\", \"مقابلة\"],\n          icon: \"fa-database\",\n          bgColor: \"bg-blue-500\",\n          barColor: \"bg-blue-500\",\n        },\n        {\n          name: \"تحليل البيانات\",\n          tags: [\"تحليل\", \"إحصاء\", \"معالجة\"],\n          icon: \"fa-chart-bar\",\n          bgColor: \"bg-green-500\",\n          barColor: \"bg-green-500\",\n        },\n        {\n          name: \"كتابة البحث\",\n          tags: [\"كتابة\", \"توثيق\", \"مراجعة أدبية\"],\n          icon: \"fa-pen\",\n          bgColor: \"bg-purple-500\",\n          barColor: \"bg-purple-500\",\n        },\n        {\n          name: \"المراجعة\",\n          tags: [\"مراجعة\", \"تدقيق\", \"تصحيح\"],\n          icon: \"fa-check\",\n          bgColor: \"bg-yellow-500\",\n          barColor: \"bg-yellow-500\",\n        },\n      ];\n\n      // Calculate completion percentage for each category\n      return categories.map((category) => {\n        // Filter tasks that belong to this category\n        const categoryTasks = tasks.value.filter((task) => {\n          // Check if task has any tag that matches this category\n          if (task.tags && Array.isArray(task.tags)) {\n            return task.tags.some((tag) => category.tags.includes(tag));\n          }\n          // Check if task title or description contains category keywords\n          return category.tags.some(\n            (tag) =>\n              (task.title && task.title.includes(tag)) ||\n              (task.description && task.description.includes(tag))\n          );\n        });\n\n        // Calculate completion percentage\n        const totalCategoryTasks = categoryTasks.length;\n        const completedCategoryTasks = categoryTasks.filter(\n          (task) => task.status === \"done\" || task.column === \"done\"\n        ).length;\n\n        const percentage =\n          totalCategoryTasks > 0\n            ? Math.round((completedCategoryTasks / totalCategoryTasks) * 100)\n            : 0;\n\n        return {\n          ...category,\n          percentage,\n        };\n      });\n    });\n\n    // Get upcoming tasks (not completed, sorted by due date)\n    const upcomingTasks = computed(() => {\n      return tasks.value\n        .filter(\n          (task) =>\n            task.status !== \"done\" && task.column !== \"done\" && task.dueDate\n        )\n        .sort((a, b) => new Date(a.dueDate) - new Date(b.dueDate))\n        .slice(0, 3); // Get only the first 3 upcoming tasks\n    });\n\n    // Get recent papers (sorted by timestamp, newest first)\n    const recentPapers = computed(() => {\n      return [...papers.value]\n        .sort((a, b) => {\n          const dateA = a.timestamp || new Date(a.year).getTime();\n          const dateB = b.timestamp || new Date(b.year).getTime();\n          return dateB - dateA;\n        })\n        .slice(0, 3); // Get only the first 3 recent papers\n    });\n\n    // Generate recent updates based on tasks and papers\n    const recentUpdates = computed(() => {\n      const taskUpdates = tasks.value\n        .filter((task) => task.dateCreated || task.lastModified)\n        .map((task) => ({\n          id: task.id,\n          title: `تم ${\n            task.status === \"done\" || task.column === \"done\" ? \"إكمال\" : \"تحديث\"\n          } مهمة: ${task.title || task.name}`,\n          description: task.description || \"تم تحديث حالة المهمة\",\n          timestamp: task.lastModified || task.dateCreated,\n          type: \"task\",\n        }));\n\n      const paperUpdates = papers.value\n        .filter((paper) => paper.timestamp)\n        .map((paper) => ({\n          id: paper.id,\n          title: `تمت إضافة ورقة علمية جديدة`,\n          description: paper.title,\n          timestamp: paper.timestamp,\n          type: \"paper\",\n        }));\n\n      // Combine and sort all updates by timestamp (newest first)\n      return [...taskUpdates, ...paperUpdates]\n        .sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp))\n        .slice(0, 3); // Get only the first 3 recent updates\n    });\n\n    // Helper functions\n    const formatDate = (dateString) => {\n      if (!dateString) return \"غير محدد\";\n\n      const date = new Date(dateString);\n      if (isNaN(date.getTime())) return dateString; // Return as is if invalid date\n\n      // Format date in Arabic style\n      const options = { year: \"numeric\", month: \"long\", day: \"numeric\" };\n      return date.toLocaleDateString(\"ar-SA\", options);\n    };\n\n    const getPriorityClass = (priority) => {\n      switch (priority?.toLowerCase()) {\n        case \"high\":\n        case \"عالي\":\n        case \"عاجل\":\n          return \"bg-red-100 text-red-800\";\n        case \"medium\":\n        case \"متوسط\":\n          return \"bg-yellow-100 text-yellow-800\";\n        case \"low\":\n        case \"منخفض\":\n          return \"bg-green-100 text-green-800\";\n        default:\n          return \"bg-gray-100 text-gray-800\";\n      }\n    };\n\n    const getUpdateBorderColor = (type) => {\n      switch (type) {\n        case \"task\":\n          return \"border-blue-500\";\n        case \"paper\":\n          return \"border-green-500\";\n        case \"child\":\n          return \"border-purple-500\";\n        default:\n          return \"border-gray-500\";\n      }\n    };\n\n    // Fetch data from Firebase\n    onMounted(() => {\n      loading.value = true;\n\n      // Helper function to check if all data is loaded\n      const checkLoading = () => {\n        if (\n          tasks.value !== undefined &&\n          papers.value !== undefined &&\n          children.value !== undefined\n        ) {\n          loading.value = false;\n        }\n      };\n\n      // Fetch tasks\n      taskService.getTasks(\n        (data) => {\n          tasks.value = data;\n          checkLoading();\n        },\n        (error) => {\n          console.error(\"خطأ في تحميل المهام:\", error);\n          loading.value = false;\n        }\n      );\n\n      // Fetch papers\n      literatureService.getPapers((data) => {\n        papers.value = data;\n        checkLoading();\n      });\n\n      // Fetch children\n      dataService.getChildren((data) => {\n        children.value = data;\n        checkLoading();\n      });\n    });\n\n    return {\n      // Data\n      tasks,\n      papers,\n      children,\n      loading,\n\n      // Computed values\n      totalTasks,\n      completedTasks,\n      completionPercentage,\n      papersCount,\n      participantsCount,\n      taskCategories,\n      upcomingTasks,\n      recentPapers,\n      recentUpdates,\n\n      // Helper functions\n      formatDate,\n      getPriorityClass,\n      getUpdateBorderColor,\n    };\n  },\n};\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}