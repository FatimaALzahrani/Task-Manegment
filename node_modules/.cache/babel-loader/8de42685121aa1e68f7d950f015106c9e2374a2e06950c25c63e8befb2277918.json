{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport { ref, computed, onMounted } from 'vue';\nimport { downSyndromeTerms, downSyndromeReferences, speechDevelopmentStages, earlyInterventionStrategies } from '@/data/downSyndromeData';\nexport default {\n  name: 'DownSyndromeTerms',\n  setup() {\n    // Data\n    const terms = ref([...downSyndromeTerms]);\n    const references = ref([...downSyndromeReferences]);\n    const developmentStages = ref([...speechDevelopmentStages]);\n    const interventionStrategies = ref([...earlyInterventionStrategies]);\n    const searchQuery = ref('');\n\n    // Modal state\n    const showAddTermModal = ref(false);\n    const isEditing = ref(false);\n    const currentTerm = ref({\n      term: '',\n      definition: ''\n    });\n\n    // Computed properties\n    const filteredTerms = computed(() => {\n      if (!searchQuery.value) return terms.value;\n      const query = searchQuery.value.toLowerCase();\n      return terms.value.filter(term => term.term.toLowerCase().includes(query) || term.definition.toLowerCase().includes(query));\n    });\n\n    // Methods\n    const editTerm = term => {\n      currentTerm.value = {\n        ...term\n      };\n      isEditing.value = true;\n      showAddTermModal.value = true;\n    };\n    const deleteTerm = term => {\n      if (confirm('هل أنت متأكد من حذف هذا المصطلح؟')) {\n        const index = terms.value.findIndex(t => t.term === term.term);\n        if (index !== -1) {\n          terms.value.splice(index, 1);\n        }\n      }\n    };\n    const saveTerm = () => {\n      if (!currentTerm.value.term.trim() || !currentTerm.value.definition.trim()) {\n        alert('يرجى ملء جميع الحقول المطلوبة');\n        return;\n      }\n      if (isEditing.value) {\n        // Update existing term\n        const index = terms.value.findIndex(t => t.term === currentTerm.value.term);\n        if (index !== -1) {\n          terms.value[index] = {\n            ...currentTerm.value\n          };\n        }\n      } else {\n        // Add new term\n        terms.value.push({\n          ...currentTerm.value\n        });\n      }\n\n      // Reset form\n      currentTerm.value = {\n        term: '',\n        definition: ''\n      };\n      isEditing.value = false;\n      showAddTermModal.value = false;\n    };\n    return {\n      terms,\n      references,\n      developmentStages,\n      interventionStrategies,\n      searchQuery,\n      filteredTerms,\n      showAddTermModal,\n      isEditing,\n      currentTerm,\n      editTerm,\n      deleteTerm,\n      saveTerm\n    };\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}